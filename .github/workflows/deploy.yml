name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]') }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Typst
        uses: typst-community/setup-typst@v4
        with:
          typst-version: ^0.14.0-rc.1

      - name: Compile Typst documents
        run: |
          mkdir -p docs/psets
          for f in psets/*.typ; do
            typst compile "$f" "docs/${f%.typ}.pdf"
          done

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Python environment
        run: |
          uv sync --all-extras --dev
          echo "$(pwd)/.venv/bin" >> $GITHUB_PATH

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render Quarto notebooks (parallel)
        run: |
          find notebooks -maxdepth 1 -name "*.qmd" -print0 | \
            xargs -0 -P $(nproc) -I {} \
            bash -c 'QUARTO_PROFILE="solutions" uv run quarto render "{}" --quiet'
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}

      - name: Prepare publish directory
        run: |
          rm -rf out
          mkdir -p out
          cp -r docs/* out/
          cp -r data out/data
          mkdir -p out/notebooks
          cp notebooks/*.html out/notebooks/ || true
          cp notebooks/*.ipynb out/notebooks/ || true
          for d in notebooks/*_files; do
            [ -d "$d" ] && cp -r "$d" out/notebooks/;
          done

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './out'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deploy via SFTP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: caesar.elte.hu
          username: apagyidavid
          password: ${{ secrets.SFTP_PASSWORD }}
          source: "./out/*"
          target: "/afs/elte.hu/user/a/apagyidavid/web/2025-2026-1/dmml"
          strip_components: 1